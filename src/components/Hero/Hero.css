
.Hero {

	--hero-heading: var(--medium-primary-color);
	--button-color: var(--light-primary-color);
	--button-color-hover: var(--primary-button-hover-color);
	--button-text-color: var(--light-color);
	
	/* countdown colours */
	--count-down-border: var(--medium-primary-color);
	--count-down-background-color: var(--background-color);
	--countdown-item-color: var(--medium-primary-color);

	/*hero animation colours*/
	--snow-svg-color: snow;

	/* background gradient */
	background: var(--color-gradient);
	

	background-repeat: no-repeat;
}

.hero-heading {
	position: absolute;
	display: grid;
	place-items: center;
	inset: max(7.5rem, 5vmax) 0 auto 0;
	text-align: center;
	width: fit-content;
	margin: auto;
	gap: 1.5vh;
}

.location-date-heading {
	display: flex;
	width: 100%;
	justify-content: space-around;
}

.location-pin {
	width: 1rem;
	height: 1rem;
}

.banner-logo {
	width: calc(10 * clamp(1rem, 5vmin, 10rem));
}


.HeroHeading h2 {
	color: var(--hero-heading);

	font-family: Coolvetica;
	font-size: clamp(1rem, 3.5vmin, 5rem);
	font-weight: 500;
}


.HeroHeading h3 {
	color: var(--hero-heading);

	font-size: clamp(1rem, 2vmin, 5rem);
	font-weight: normal;
}

.button {
	margin: 3vmin auto;
}


.Button button {
	background-color: var(--button-color);

	border: none;
	border-radius: 100px;
	color: var(--button-text-color);
	transition: 1s;
	box-shadow: 0 15px 25px rgba(0, 0, 0, 0.15), 0 5px 10px rgba(0, 0, 0, 0.05);
	font-size: clamp(1rem, 1vmin, 5rem);
	white-space: nowrap;
	padding: clamp(0.75rem, 1vmin, 5rem) calc(2 * clamp(0.75rem, 1vmin, 5rem));
	cursor: pointer;
	font-family: Rubik;
}


.Button button:hover {
	background-color: var(--button-color-hover);

}

.hero-img svg {
	height: 100%;
	width: 100%;
	margin-top: calc(20rem - 20vw);
	margin-bottom: -35%;
}

.countdown-dialog {
	box-sizing: border-box;
	position: absolute;
	top: calc(40vmin + max(20rem, 20vmin));
	left: 50vw;
	z-index: 99;
	transform: translateX(-50%);
	margin: 0;
	padding: max(1rem, 2vmin) max(2rem, 4vmin);
	text-align: center;
	border-radius: 100px;
	box-shadow: 0 15px 25px rgba(0, 0, 0, 0.15), 0 5px 10px rgba(0, 0, 0, 0.05);
	border: 5px solid var(--count-down-border);
	background-color: var(--count-down-background-color);
	font-size: clamp(0.75rem, 2vmin, 5rem);
	opacity: 0;
	pointer-events: none;
	transition: opacity 1s ease-in-out;
	display: flex;
	gap: max(1rem, 5vmin);
}

.countdown-dialog[open] {
	opacity: 1;
	pointer-events: all;
}

.countdown-item {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.countdown-item h3 {
	font-size: 1.5em;
	font-family: Rubik;
	font-weight: normal;
}


.CountdownItem h4 {
	color: var(--countdown-item-color);

	font-weight: normal;
}

/* Hero SVG animations */
svg .snow {
	animation: var(--snow-svg-color) 100s linear infinite;
}

svg .halo {
	animation: halo 10s linear infinite alternate;
	transform-box: fill-box;
	transform-origin: center;
}

svg #flag {
	animation: flag 1s linear infinite alternate;
	transform-box: fill-box;
	transform-origin: top left;
}

svg .cloud {
	animation: clouds 100s linear infinite alternate;
}

svg :is(#ClockLeft, #ClockRight) {
	animation: clock linear infinite;
	transform-box: fill-box;
}

svg #ClockLeft {
	animation-duration: 3600s;
	transform-origin: top right;
}

svg #ClockRight {
	animation-duration: 60s;
	transform-origin: top left;
}

svg :is(#leftbird, #rightbird) {
	animation: flap 1s linear infinite alternate;
}

svg #leftbird {
	animation-duration: 2s;
	animation-delay: 1s;
}

svg #rightbird {
	animation-duration: 1s;
}

@keyframes snow {
	0% {
		transform: translate(-1vw, -50vh);
		opacity: 0;
	}

	10%,
	95% {
		opacity: 1;
	}

	100% {
		transform: translate(1vw, 0vh);
		opacity: 0;
	}
}

@keyframes halo {
	50% {
		transform: scale(1.125);
		filter: saturate(1.5);
	}
}

@keyframes flag {
	50% {
		transform: skew(10deg) rotate(10deg);
	}
}

@keyframes clouds {
	0% {
		transform: translateX(-50%);
	}

	100% {
		transform: translateX(50%);
	}
}

@keyframes clock {
	100% {
		transform: rotate(360deg);
	}
}

@keyframes flap {
	0% {
		transform: translateY(-2px);
	}

	100% {
		transform: translateY(2px);
	}
}
